
name: Android_Release

# 1
on:
  # 2
  # add the branch in which you have to trigger the workflow
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    

  # 3
  workflow_dispatch:

# 4
jobs:
  # 5
  build:
    # 6
    runs-on: ubuntu-latest

    # 7
    steps:
      # 8
      - uses: actions/checkout@v3

      # this is used to skip the sdk download if already present
      # - uses: actions/setup-java@v3
      #   with:
      #     distribution: 'zulu'
      #     java-version: "12.x"
      #     cache: 'gradle' // 1
       
      # - uses: subosito/flutter-action@v2
      #   with:
      #     flutter-version: "3.0.0"
      #     channel: 'stable'
      #     cache: true // 2

# build:
#     name: Create Android Build
#     # 1
#     needs: version
#     runs-on: ubuntu-latest
#     steps:
      # - uses: actions/checkout@v3
      # 2   
      - name: Get Android Version
        id: get_version
        run: |
          echo "ANDROID_VERSION=$(cat pubspec.yaml | grep 'version:' | awk '{print $2}') >> $GITHUB_ENV"
      # 3
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < /path/to/version.txt > /path/to/version1.txt
             ls -l
             tr -d '\n' < version.txt > version1.txt

      # 4
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      # 5
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      
      - name: Get current build number
        id: get_build_number
        run: echo "::set-output name=build_number::${GITHUB_RUN_NUMBER}"

      - name: Display original version
        run: cat pubspec.yaml

      - name: Update version number
        run: |
         sed -i "s/version: .*/version: '1.0.${GITHUB_RUN_NUMBER}'/g" pubspec.yaml
         cat pubspec.yaml
      - name: Display updated version
        run: cat pubspec.yaml
      # # 6
      # - name: Download Android keystore
      #   id: android_keystore
      #   uses: timheuer/base64-to-file@v1.0.3
      #   with:
      #     fileName: upload-keystore.jks
      #     encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      # 7
      # - name: Create key.properties
      #   run: |
      #     echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
      #     echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
      #     echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: 'stable'
          cache: true
     
      - name: Get dependencies
        run: flutter pub get

      - name: Start Android Release Build
        run: flutter build appbundle
      # 8
      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/bundle/release/app-release.aab